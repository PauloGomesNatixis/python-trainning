init:
	poetry init -C app

add:
	poetry add fastapi uvicorn asyncpg python-decouple -C app

build-postgresql:
	docker build -t postgres ./postgres

build-app:
	docker build -t app ./app

build-all:
	docker build -t app ./app
	docker build -t postgres ./postgres

run-postgres:
	docker run -d --rm --name postgres --network app-network -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=postgres -p 5432:5432 postgres

run-app: build-all run-postgres
	docker run -it --rm --name app --network app-network -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_HOST=postgres -e POSTGRES_DB=postgres -v ${PWD}/app:/app -p 8000:8000 app poetry run uvicorn src.app:app --host 0.0.0.0 --port 8000


stop-all:
	docker stop app postgres



# Variables
APP_NAME = app_api
POSTGRES_NAME = postgres
DOCKER_COMPOSE = docker-compose
COMPOSE_FILE = docker-compose.yml

# Targets
.PHONY: all build run push clean

# Default target
all: build

# Build the images
build:
	@$(DOCKER_COMPOSE) build

# Run the services
run:
	@$(DOCKER_COMPOSE) up

# Push the images to Docker Hub
push:
	@$(DOCKER_COMPOSE) push

# Clean up Docker containers and images
clean:
	@$(DOCKER_COMPOSE) down
	@docker rmi $(APP_NAME) $(POSTGRES_NAME) || true

# Extract inspection data from the services to a file
inspect:
	@docker inspect $(APP_NAME) > $(APP_NAME)_inspect.json || true
	@docker inspect $(POSTGRES_NAME) > $(POSTGRES_NAME)_inspect.json || true